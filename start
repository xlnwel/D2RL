#!/bin/zsh


# algos=(
#     # ppo
#     # ppo_meta
#     ppg
#     # apex-dqn
#     # apex-iqn
#     # apex-mrdqn
#     # daac
#     # apex-mrdqn
#     # sacdiqn5
# )
# suite=procgen
# envs=(
#     # leaper
#     # ninja
#     # chaser
#     # bigfish
#     # plunder
#     # coinrun
#     # heist
#     # starpilot
#     # miner
#     # climber
#     dodgeball
#     bigfish
#     caveflyer 
#     jumper
#     fruitbot
#     bossfight
#     maze
# )
args1=(entropy)
args2=(True)
args3=(1)

algos=(
    mappo
)
suite=smac
envs=(
    3s_vs_5z
    3s5z_vs_3s6z
    corridor
)

for e in "${envs[@]}"; do
    for a in "${algos[@]}"; do
        for a1 in "${args1[@]}"; do
            for a2 in "${args2[@]}"; do
                for a3 in "${args3[@]}"; do
                    # if [[ $a2 == $a3 ]]
                    # then continue
                    # fi
                    # sed -e "s/KI/${a2}/g" \
                    #     algo/ppo/${suite}_template.yaml > algo/ppo/${suite}_config.yaml
                    dir="logs/${suite}_${e}/${a}"
                    mkdir -p $dir
                    # py_script="train ${a} -e ${suite}_${e} $@ >& ${dir}/outputs.txt"
                    py_script="train ${a} -e ${suite}_${e} -kw n_envs=4 >& ${dir}/outputs.txt"
                    echo $py_script
                    eval $py_script
                    last_dir=$(ls -td ${dir}/* | grep -v txt | head -n 1)
                    mv_script="mv ${dir}/outputs.txt ${last_dir}/outputs.txt"
                    echo $mv_script
                    eval $mv_script
                done
            done
        done
    done
done
